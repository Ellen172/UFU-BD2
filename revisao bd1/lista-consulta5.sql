--É preciso atualizar a informação do saldo do cliente na tabela cliente.
--para este propósito devemos levar em conta o saldo dos depósitos menos os
--saldos de empréstimos. o cálculo final deve ser armazenado na tabela conta.
﻿--CLIENTES QUE POSSUEM APENAS DEPOSITOS
--Q01:

SELECT	NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA,
        SUM(SALDO_DEPOSITO) AS TOTAL
FROM DEPOSITO
WHERE NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA in 
	(SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM EMPRESTIMO)
GROUP BY NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA

--CLIENTES QUE POSSUEM APENAS EMPRESTIMOS
--Q02:

SELECT	NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA,
        -1*SUM(VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO
WHERE NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA NOT IN 
	(SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM DEPOSITO)
group by nome_cliente, nome_agencia , numero_conta  


--CLIENTES QUE POSSUEM DEPOSITO E EMPRESTIMOS (AMBOS)
--Q03:

SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA,
	SUM(D.SALDO_DEPOSITO)-SUM(E.VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO AS E, DEPOSITO AS D
GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA

--CLIENTES QUE POSSUEM DEPOSITOS, EMPRESTIMOS OU AMBOS
--Q04:

(SELECT	NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA, --SOMENTE DEPOSITOS
        SUM(SALDO_DEPOSITO) AS TOTAL
FROM DEPOSITO
WHERE NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA NOT IN 
	(SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM EMPRESTIMO)
GROUP BY NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA)
UNION
(SELECT	NOME_CLIENTE, nome_agencia , NUMERO_CONTA, --SOMENTE EMPRESTIMOS
        -1*SUM(VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO
WHERE NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA NOT IN 
	(SELECT NOME_CLIENTE || NOME_AGENCIA || NUMERO_CONTA FROM DEPOSITO)
GROUP BY NOME_CLIENTE, NOME_AGENCIA, NUMERO_CONTA)
UNION
(SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA, -- AMBOS
	SUM(D.SALDO_DEPOSITO)-SUM(E.VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO AS E, DEPOSITO AS D
GROUP BY E.NOME_CLIENTE, E.nome_agencia , E.NUMERO_CONTA)

--Agora utilizamos a Q04 como relatório para o comando de atualização

UPDATE CONTA SET SALDO_CONTA = 0;

SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;

--
-- PERCEBAM QUE ESTA CONSULTA AINDA NÃO FEZ UM RELATÓRIO COMPLETO
-- DOS CLIENTES DO BANCO PORQUE EXISTEM CLIENTES QUE NÃO FIZERAM
-- NEM EMPRESTIMOS E NEM DEPÓSITOS, MAS AINDA ASSIM POSSUEM UMA
-- CONTA NO BANCO.





-- EXISTE UM MODO MAIS FÁCIL DE REALIZAR ESTAS OPERAÇÕES?






-- COM A UTILIZAÇÃO DE JUNÇÕES, ESCREVEMOS CONSULTAS MENORES, MAIS
-- SIMPLES, DETERMINANDO COMO AS LINHAS DE CADA TABELA DEVEM SER 
-- RETORNADAS DE ACORDO COM A EXISTÊNCIA OU NÃO DE UMA LINHA 
-- CORRESPONDENTE NA OUTRA TABELA

--ANTES DE FAZER A CONSULTA COMPLETA, VAMOS GRADUAR A COMPLEXIDADE:
--COMEÇAMOS COM A CONSULTA PARA RETORNAR CLIENTES QUE POSSUEM
--EMPRESTIMOS E DEPOSITOS (AO MESMO TEMPO)

--Q06:

SELECT	E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA,
	SUM(D.SALDO_DEPOSITO)-SUM(E.VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO AS E INNER JOIN DEPOSITO AS D 
on 	E.NOME_CLIENTE = D.NOME_CLIENTE
AND   	E.NOME_AGENCIA = D.NOME_AGENCIA
AND   	E.NUMERO_CONTA = D.NUMERO_CONTA
GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA




-- UTILIZANDO A CLÁUSULA "NATURAL", ENTÃO A CLÁUSULA "ON" NÃO
-- NECESSITA SER UTILIZADA E A COMPLEXIDADE DA CONSULTA SERÁ
-- REDUZIDA COMPARANDO COM A CONSULTA INICIAL, NA QUAL TODAS
-- AS CHAVES DEVIAM SER COMPARADAS AOS PARES.
--REESCRITA POR MEIO DE JUNÇÕES. NESTE CASO TEMOS:
--Q07:
SELECT E.NOME_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA,
	SUM(D.SALDO_DEPOSITO)-SUM(E.VALOR_EMPRESTIMO) AS TOTAL
FROM EMPRESTIMO AS E natural INNER JOIN DEPOSITO AS D
GROUP BY E.NOME_CLIENTE, E.NOME_AGENCIA, E.numero_conta 

--CONCLUSÃO:
--É MELHOR FAZER USO DA CLÁUSULA NATURAL QUANDO POSSÍVEL.





-- QUER-SE RETORNAR DADOS EXCLUSIVOS DA TABELA CLIENTE EM UM JOIN
-- COM A TABELA DEPOSITO. CASO EXISTAM DEPÓSITO DEVE SER MOSTRADO
-- E CASO NÃO EXISTAM DEPÓSITOS MOSTRAR APENAS OS DADOS DO CLIENTE

--Q08:

SELECT	C.NOME_CLIENTE, C.CIDADE_CLIENTE, D.NOME_AGENCIA, 
         D.NUMERO_CONTA, SUM(D.SALDO_DEPOSITO) AS DEP
FROM CLIENTE AS C natural left outer JOIN DEPOSITO AS D
GROUP BY C.NOME_CLIENTE, D.NOME_AGENCIA, D.NUMERO_CONTA
ORDER BY C.nome_cliente , C.cidade_cliente , D.nome_agencia , D.numero_conta 

-- AS LINHAS DA TABELA À ESQUERDA QUE ESTIVEREM FORA DO JOIN 
-- SERÃO RETORNADAS, PORÉM COM CONTEÚDO NULO NOS DADOS NÃO
-- AGRUPADOS.


--Q09: O MESMO ENTRE CLIENTE E EMPRESTIMO

SELECT	C.NOME_CLIENTE, C.CIDADE_CLIENTE, E.NOME_AGENCIA, 
         E.NUMERO_CONTA, SUM(E.saldo_deposito) AS EMP
FROM CLIENTE AS C NATURAL left OUTER JOIN DEPOSITO AS E
GROUP BY C.NOME_CLIENTE, C.cidade_cliente , E.nome_agencia , E.numero_conta 
ORDER BY C.NOME_CLIENTE, C.CIDADE_CLIENTE, E.NOME_AGENCIA, E.NUMERO_CONTA

-- ISSO NÃO É UMA FALHA, MAS UMA VIRTUDE DO JOIN PORQUE NOS PERMITE
-- RESPONDER À SEGUINTE PERGUNTA:

--*************************************************************
-- "RETORNE TODOS OS CLIENTES DO BANCO COM SUAS RESPECTIVAS SOMAS
-- "DE DEPÓSITOS E EMPRESTIMOS CASO EXISTAM"
--*************************************************************
--Q10a:

SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA,
	SUM(D.SALDO_DEPOSITO) AS TOTAL_DEP, 
	SUM(E.VALOR_EMPRESTIMO) AS TOTAL_EMP
FROM CONTA AS C natural full OUTER join 
	(EMPRESTIMO AS E natural full OUTER JOIN deposito as D)
GROUP BY C.nome_cliente , C.NOME_AGENCIA, C.NUMERO_CONTA


--Q10b:
SELECT	C.NOME_CLIENTE, C.NUMERO_CONTA,
	SUM(D.SALDO_DEPOSITO) as TOTAL_DEP, 
	SUM(E.VALOR_EMPRESTIMO) AS TOTAL_EMP
FROM CONTA AS C natural full outer JOIN 
		(EMPRESTIMO AS E NATURAL FULL outer join DEPOSITO AS D)
GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA




--Agora a atualizacao do saldo da conta dos clientes fica
--mais simples do que a Q05
--Q10c ou Q05b: 
UPDATE CONTA SET SALDO_CONTA = RELATORIO.TOTAL
FROM(
	SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA,
		SUM(D.SALDO_DEPOSITO) - SUM(E.VALOR_EMPRESTIMO) AS TOTAL
	FROM CONTA AS C natural full outer join 
			(EMPRESTIMO AS E NATURAL full outer JOIN DEPOSITO AS D)
	GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA
) AS RELATORIO
WHERE  CONTA.NOME_CLIENTE = RELATORIO.NOME_CLIENTE
and    CONTA.NOME_AGENCIA = RELATORIO.NOME_AGENCIA
and    CONTA.NUMERO_CONTA = RELATORIO.NUMERO_CONTA




--SERÁ QUE AGORA ESTÁ CERTO?
SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;





--Q10d
SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA,
	COALESCE(SUM(D.SALDO_DEPOSITO  ),0) AS TOTAL_DEP, 
	COALESCE(SUM(E.VALOR_EMPRESTIMO),0) AS TOTAL_EMP
FROM CONTA AS C natural FULL outer JOIN 
		(EMPRESTIMO AS E natural full outer join DEPOSITO AS D)
GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA



--Q10e
SELECT	C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA,
	COALESCE(SUM(D.SALDO_DEPOSITO),0) - COALESCE(SUM(E.VALOR_EMPRESTIMO),0) AS TOTAL
from conta as C natural full outer join 
	(EMPRESTIMO AS E NATURAL full outer join DEPOSITO AS D)
GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.numero_conta 


--Q10f ou Q05c
UPDATE CONTA SET SALDO_CONTA = RELATORIO.total
FROM(
SELECT	C.NOME_CLIENTE, C.nome_agencia, C.NUMERO_CONTA,
	COALESCE(SUM(D.SALDO_DEPOSITO),0) - COALESCE(SUM(E.VALOR_EMPRESTIMO),0) AS TOTAL
FROM CONTA AS C natural full outer join 
		EMPRESTIMO AS E natural full outer join DEPOSITO AS D
GROUP BY C.NOME_CLIENTE, C.NOME_AGENCIA, C.NUMERO_CONTA) AS RELATORIO
WHERE CONTA.NOME_CLIENTE = RELATORIO.NOME_CLIENTE
AND   CONTA.NUMERO_CONTA = RELATORIO.NUMERO_CONTA
and conta.nome_agencia = relatorio.nome_agencia

--SERÁ QUE AGORA ESTÁ CERTO?
SELECT NOME_CLIENTE, SALDO_CONTA FROM CONTA ORDER BY SALDO_CONTA DESC;

